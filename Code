import tkinter as tk
from tkinter import ttk, messagebox
import sqlite3
import datetime

# ---------- Database Setup ----------
conn = sqlite3.connect('habit_tracker.db')
cursor = conn.cursor()
cursor.execute('''
    CREATE TABLE IF NOT EXISTS habits (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL
    )
''')
cursor.execute('''
    CREATE TABLE IF NOT EXISTS habit_status (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        habit_id INTEGER,
        date TEXT,
        status INTEGER,
        UNIQUE(habit_id, date)
    )
''')
conn.commit()

# ---------- Functions ----------
def add_habit():
    habit = habit_entry.get().strip()
    if habit:
        cursor.execute("INSERT INTO habits (name) VALUES (?)", (habit,))
        conn.commit()
        habit_entry.delete(0, tk.END)
        load_habits()
    else:
        messagebox.showwarning("Input Error", "Habit name cannot be empty!")

def mark_completed(habit_id, var):
    date_today = datetime.date.today().isoformat()
    status = 1 if var.get() else 0
    try:
        cursor.execute('''
            INSERT OR REPLACE INTO habit_status (habit_id, date, status)
            VALUES (?, ?, ?)
        ''', (habit_id, date_today, status))
        conn.commit()
    except Exception as e:
        messagebox.showerror("Database Error", str(e))

def load_habits():
    for widget in habits_frame.winfo_children():
        widget.destroy()

    date_today = datetime.date.today().isoformat()
    cursor.execute("SELECT * FROM habits")
    habits = cursor.fetchall()

    for habit_id, name in habits:
        var = tk.BooleanVar()
        cursor.execute('''
            SELECT status FROM habit_status
            WHERE habit_id = ? AND date = ?
        ''', (habit_id, date_today))
        result = cursor.fetchone()
        if result and result[0] == 1:
            var.set(True)

        cb = tk.Checkbutton(habits_frame, text=name, variable=var,
                            command=lambda id=habit_id, v=var: mark_completed(id, v),
                            bg="#eeeeee", font=("Arial", 12))
        cb.pack(anchor='w', pady=5)

# ---------- UI Setup ----------
root = tk.Tk()
root.title("Habit Tracker App ðŸ“†")
root.geometry("400x500")
root.configure(bg="#f7f7f7")

title = tk.Label(root, text="ðŸ“† Habit Tracker", font=("Arial", 20, "bold"), bg="#f7f7f7", fg="#333")
title.pack(pady=10)

habit_entry = tk.Entry(root, font=("Arial", 14))
habit_entry.pack(pady=10)

add_btn = tk.Button(root, text="Add Habit", command=add_habit, font=("Arial", 12), bg="#4CAF50", fg="white")
add_btn.pack(pady=5)

separator = ttk.Separator(root, orient='horizontal')
separator.pack(fill='x', pady=10)

habits_frame = tk.Frame(root, bg="#f7f7f7")
habits_frame.pack(pady=10, fill='both', expand=True)

load_habits()

root.mainloop()
